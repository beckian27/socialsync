PRAGMA foreign_keys = ON;



CREATE TABLE IF NOT EXISTS invitations(
  name VARCHAR(64) NOT NULL,
  creator VARCHAR(20) NOT NULL REFERENCES users(username),
  postid INTEGER PRIMARY KEY AUTOINCREMENT,
  created DATETIME DEFAULT CURRENT_TIMESTAMP,
  group INTEGER 
  FOREIGN KEY(creator) REFERENCES users(username),
  FOREIGN KEY(creator) REFERENCES users(username),
  ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS users(
  fullname VARCHAR(40) NOT NULL,
  username VARCHAR(40) NOT NULL,
  filename VARCHAR(64) NOT NULL,
  password VARCHAR(256) NOT NULL,
  created DATETIME DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY(username)
);

CREATE TABLE IF NOT EXISTS groups(
  groupname VARCHAR(20) NOT NULL,
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  created DATETIME DEFAULT CURRENT_TIMESTAMP,
  members JSON
  ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments(
  commentid INTEGER PRIMARY KEY AUTOINCREMENT,
  owner VARCHAR(20) NOT NULL,
  postid INTEGER NOT NULL,
  text VARCHAR(1024) NOT NULL,
  created DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY(owner) REFERENCES users(username) ON DELETE CASCADE,
  FOREIGN KEY(postid) REFERENCES posts(postid)
  ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS likes(
  likeid INTEGER PRIMARY KEY AUTOINCREMENT,
  owner VARCHAR(20) NOT NULL,
  postid INTEGER NOT NULL,
  created DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY(owner) REFERENCES users(username) ON DELETE CASCADE,
  FOREIGN KEY(postid) REFERENCES posts(postid)
  ON DELETE CASCADE
);
